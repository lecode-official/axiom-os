
# The current version number of Axiom (semantic versioning)
VERSION                = 0.0.1-Pre-Alpha-1

# The assembler that we are using
ASM                    = /usr/bin/nasm

# The folder that will contain the build result
BUILDDIRECTORY         = Build

# The source files for the 
BOOTLOADERSTAGE1SOURCE = Boot/BootLoaderStage1.asm Boot/VideoDriver.asm Boot/StorageDriver.asm Boot/Ext2Driver.asm

# Declares which of the targets are phony (do not actually create a file and are thus build everytime)
.PHONY: Axiom-$(VERSION).img BuildDirectory Clean

# The default target, that builds Axiom completely
All: Axiom-$(VERSION).img

# The target that creates 
Axiom-$(VERSION).img: BootLoaderStage1.bin
	# Creates a new disk image by reading 20 MiB from /dev/null (which just outputs zeros) and writing it to a file
	dd if=/dev/zero of=$(BUILDDIRECTORY)/Axiom-$(VERSION).img bs=1024 count=20480

	# Creates a loop device for the disk image
	losetup /dev/loop1 $(BUILDDIRECTORY)/Axiom-$(VERSION).img

	# Creates an ext2 file system on the disk image
	mkfs /dev/loop1

	# Copies our custom boot sector to the disk image
	dd if=$(BUILDDIRECTORY)/BootLoaderStage1.bin of=/dev/loop1 bs=512 count=1

	# Mounts the disk image, so that all the other files can be copied onto it
	mount -t ext2 /dev/loop1 /mnt

	# Unmounts the disk image and removes the loop device, after all files have been copied to it
	umount /mnt
	losetup -d /dev/loop1

# The target that assembles the stage 1 of the boot loader
BootLoaderStage1.bin: BuildDirectory $(BOOTLOADERSTAGE1SOURCE)
	$(ASM) Boot/BootLoaderStage1.asm -f bin -o $(BUILDDIRECTORY)/BootLoaderStage1.bin

# The target that creates the folder where the result of the build is stored
BuildDirectory:
	mkdir -p $(BUILDDIRECTORY)

# The target that cleans up the environment by deleting all files generated by the build
Clean:
	rm -rf $(BUILDDIRECTORY)